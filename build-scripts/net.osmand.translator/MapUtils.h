//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: MapUtils.java
//
//  Created by Remarket on 18.10.12.
//

TODO: change to abstract class 
interface JavaUtilCollection;
TODO: change to abstract class 
interface JavaUtilList;
class Entity;
class IOSCharArray;
class LatLon;
class Node;

#include "java/util/Comparator.h"

class MapUtils {

public: 
 static  double getDistance ( Node* e1, Node* e2 );
 static  double getDistance ( LatLon* l, double latitude, double longitude );
 static  double getDistance ( Node* e1, double latitude, double longitude );
 static  double getDistance ( Node* e1, LatLon* point );
 static  double getOrthogonalDistance ( double lat, double lon, double fromLat, double fromLon, double toLat, double toLon );
 static  LatLon * getProjection ( double lat, double lon, double fromLat, double fromLon, double toLat, double toLon );
 static  double getDistance ( double lat1, double lon1, double lat2, double lon2 );
 static  double getDistance ( LatLon* l1, LatLon* l2 );
 static  LatLon * getCenter ( Entity* e );
 static  LatLon * getWeightCenter ( JavaUtilCollection* nodes );
 static  LatLon * getWeightCenterForNodes ( JavaUtilCollection* nodes );
 static  LatLon * getMathWeightCenterForNodes ( JavaUtilCollection* nodes );
 static  double checkLongitude ( double longitude );
 static  double checkLatitude ( double latitude );
 static  int get31TileNumberX ( double longitude );
 static  int get31TileNumberY ( double latitude );
 static  double get31LongitudeX ( int tileX );
 static  double get31LatitudeY ( int tileY );
 static  double getTileNumberX ( float zoom, double longitude );
 static  double getTileNumberY ( float zoom, double latitude );
 static  double getTileEllipsoidNumberY ( float zoom, double latitude );
 static  double getLatitudeFromEllipsoidTileY ( float zoom, float tileNumberY );
 static  double getLongitudeFromTile ( float zoom, double x );
 static  double getPowZoom ( float zoom );
 static  float calcDiffPixelX ( float rotateSin, float rotateCos, float dTileX, float dTileY, float tileSize );
 static  float calcDiffPixelY ( float rotateSin, float rotateCos, float dTileX, float dTileY, float tileSize );
 static  double getLatitudeFromTile ( float zoom, double y );
 static  int getPixelShiftX ( int zoom, double long1, double long2, int tileSize );
 static  int getPixelShiftY ( int zoom, double lat1, double lat2, int tileSize );
 static  void addIdsToList ( JavaUtilCollection* source, JavaUtilList* ids );
 static  void sortListOfEntities ( JavaUtilList* list, double lat, double lon );
 static  NSString * buildShortOsmUrl ( double latitude, double longitude, int zoom );
 static  float unifyRotationDiff ( float rotate, float targetRotate );
 static  float unifyRotationTo360 ( float rotate );
 static  double alignAngleDifference ( double diff );
 static  double degreesDiff ( double a1, double a2 );

private: 
 static  NSString * BASE_SHORT_OSM_URL;
 static  IOSCharArray * intToBase64;
 static  double scalarMultiplication ( double xA, double yA, double xB, double yB, double xC, double yC );
 static  long long interleaveBits ( long long x, long long y );
};


class MapUtils_$1 {
 public
  double val$lat_;
  double val$lon_;

public: 
  int compare ( id* o1, id* o2 );
 (bool)isEqual:(id)param0;
};

